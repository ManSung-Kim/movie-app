{"version":3,"sources":["logo.svg","Movies.js","App.js","reportWebVitals.js","index.js"],"names":["Movies","props","state","data","getMyData","a","axios","get","movies","console","log","JSON","stringify","setState","isMobile","this","movieName","rate","i","ret","mainStar","parseInt","document","querySelectorAll","forEach","elem","triggerDiff","getBoundingClientRect","top","window","innerHeight","isElementUnderBottom","style","opacity","transform","addEventListener","handleScroll","class","map","href","getYutubeUrl","title","target","src","medium_cover_image","loading","alt","getRateString","rating","year","synopsis","Component","App","isPc","useMediaQuery","query","isTablet","e","changeBgSection","querySelector","changeBgImg","bgTop","height","filter","dev","getDeviceType","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79cb1e98.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{Component} from 'react'\r\nimport axios from 'axios'\r\n//import { useMediaQuery } from \"react-responsive\"\r\nimport * as ScrollUtil from './ScrollUtil.js'\r\n\r\nfunction isElementUnderBottom(elem, triggerDiff) {\r\n    const {top} = elem.getBoundingClientRect(); \r\n        // 등록된 element의 Rect를 top으로 저장\r\n    const {innerHeight} = window;\r\n        // 현재 window를 innerHeight로 저장\r\n\r\n    return top > innerHeight + (triggerDiff || 0); \r\n        // (현재 window + triggerDiff(예시로는 -20))보다 \r\n        // element의 rect가 크냐? \r\n        // 크다 : 현재 window보다 elem이 아래에 위치하므로 true return\r\n        // 작다 : 현재 window보다 elem이 같거나(맞나?) 위에 위치하므로 false return\r\n}\r\n\r\nclass Movies extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"device ctor\");\r\n        console.log(props.isMobile);\r\n    }\r\n\r\n    state = {\r\n        data:[],\r\n    };\r\n    \r\n    //getMyData = async() => {\r\n    //getMyData = async function() {\r\n    getMyData = async () => {\r\n        //const data = await axios.get('https://www.everdevel.com/ReactJS/axios/json/');\r\n        // const data = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n        // console.log('data is ' + JSON.stringify(data));\r\n        let data;\r\n        try {\r\n        data = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n        data = data.data.data.movies;\r\n        } catch (err) {\r\n            console.log(err);\r\n        } finally {\r\n            console.log('data is ' + JSON.stringify(data));\r\n            this.setState({data});\r\n        }\r\n\r\n        // async fcn은 암묵적으로 Promise를 반환\r\n    };\r\n    \r\n    //React Hook \"useMediaQuery\" cannot be called at the top level.\r\n    // isPc = useMediaQuery( {\r\n    //     query : \"(min-width:1024px)\"\r\n    //   });\r\n    //   isTablet = useMediaQuery({\r\n    //     query : \"(min-width:768px) and (max-width:1023px)\"\r\n    //   });\r\n    //   isMobile = useMediaQuery({\r\n    //     query : \"(max-width:767px)\"\r\n    //   });\r\n\r\n    componentDidMount() {\r\n        console.log('in componentDidMount');\r\n        this.getMyData();\r\n    }\r\n    componentDidUpdate() {\r\n        console.log('in componentDidUpdate');\r\n    }\r\n    componentWillUnmount() {\r\n        console.log('in componentWillUnmount');\r\n    }\r\n\r\n    getYutubeUrl(movieName) {\r\n        return 'https://www.youtube.com/results?search_query=movie+' + movieName;\r\n    }\r\n\r\n    getRateString(rate) {\r\n        var i;\r\n        let ret;\r\n        var mainStar = parseInt(rate/2);\r\n        var subStar = rate%2;\r\n        for(i = 0; i < mainStar; i++) {\r\n            ret += '⭐';\r\n        }\r\n        ret += '☆';\r\n\r\n        return ret;\r\n    }\r\n\r\n    // 왜 component의 함수로 집어넣으면 is not defined? 나중에 알아보기 210318\r\n    // isElementUnderBottom(elem, triggerDiff) {\r\n    //     const {top} = elem.getBoundingClientRect(); \r\n    //         // 등록된 element의 Rect를 top으로 저장\r\n    //     const {innerHeight} = window;\r\n    //         // 현재 window를 innerHeight로 저장\r\n    \r\n    //     return top > innerHeight + (triggerDiff || 0); \r\n    //         // (현재 window + triggerDiff(예시로는 -20))보다 \r\n    //         // element의 rect가 크냐? \r\n    //         // 크다 : 현재 window보다 elem이 아래에 위치하므로 true return\r\n    //         // 작다 : 현재 window보다 elem이 같거나(맞나?) 위에 위치하므로 false return\r\n    // }\r\n    \r\n    handleScroll() { // scroll callback\r\n        const elems = document.querySelectorAll('.up-on-scroll');\r\n        elems.forEach(elem => {\r\n            if(isElementUnderBottom(elem, -20)) { // 현재 시야보다 아래에 있을 때\r\n                elem.style.opacity = \"0\"; // 완전 투명\r\n                elem.style.transform = 'translateY(70px)'; // 70px 아래에 이동하도록 효과\r\n            } else { // 현재와 동일선상 혹은 위에 위치할 때\r\n                elem.style.opacity = 1;\r\n                elem.style.transform = 'translateY(0px)'; // 제자리로 돌아오는 효과\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log('is ' + JSON.stringify(this.state.data));\r\n        console.log('ismobile? ' + this.props.isMobile);\r\n        //ScrollUtil.handleScroll();\r\n        window.addEventListener('scroll', this.handleScroll);\r\n        return (\r\n            <div class='movies'>\r\n                {\r\n                    this.state.data.map((movies) => {\r\n                        return (\r\n                            <div class={(this.props.isMobile ? \"movie_mobile\" : \"movie\") + \" up-on-scroll\"}>\r\n                                <a class=\"movielink\" href={this.getYutubeUrl(movies.title)} target=\"_blink\">\r\n                                    <img class=\"movieposter\" src={movies.medium_cover_image}\r\n                                        loading=\"lazy\" alt={movies.title} title={movies.title} />\r\n                                    {/* <div class=\"movieposter_gradation\"></div> */}\r\n                                </a>\r\n                                <div class=\"moviesummary\">\r\n                                    <h1>{movies.title}</h1>\r\n                                    <h4>{this.getRateString(movies.rating)}</h4>\r\n                                    <h4>{movies.year}</h4>\r\n                                    <div class=\"moviesynopsis\">\r\n                                        <p>{movies.synopsis}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Movies;\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport axios from 'axios';\nimport Movies from './Movies';\nimport { useMediaQuery } from \"react-responsive\"\n//import { Mobile/*,Tablet,Pc*/ } from './DeviceMediaQuery';\n\n\n// getMovies = async () => {\n//   const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");  \n// }\n\n// getMovies = async function() {\n//   const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");  \n//   return movies;\n// }\n\n\n// async getMoviesAsync() {\n//     const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n// }\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Food name={getMovies.data.data.movies}/>\n//     </div>\n//   );\n// }\n\n\n//class App extends React.Component {\nfunction App() {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     isLoading: true,\n  //     movies: []\n  //   }\n  //   //this.getMovies();\n  // }\n\n  // getMovies = async() => {\n  //   const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n  //   console.log(movies.data.data.movies);\n    \n  //   this.setState({movies: movies});\n  //   console.log(this.state.movies);\n  // }\n\n  const isPc = useMediaQuery( {\n    query : \"(min-width:1024px)\"\n  });\n  const isTablet = useMediaQuery({\n    query : \"(min-width:768px) and (max-width:1023px)\"\n  });\n  const isMobile = useMediaQuery({\n    query : \"(max-width:767px)\"\n  });\n\n  // render() {\n  //   //this.getMovies();\n  //   // return (\n  //   //   <div className=\"App\">\n  //   //     {/* <Food name=\"testfood\"/> */}\n  //   //     <Food name={this.movies}/>\n  //   //   </div>\n  //   // );\n  //   return (\n  //     <div class='container'>\n  //       <div>\n  //         {isPc && <p>Pc Mode</p>}\n  //         {isTablet && <p>Tablet Mode</p>}\n  //         {isMobile && <p>Mobile Mode</p>}\n  //       </div>\n  //       <Movies />\n  //     </div>\n  //   );\n  // }\n\n  const getDeviceType = () => {\n    let dev = \"Device is \";\n\n    if(isPc) {\n      dev += \"PC\";\n    } else if(isTablet) {\n      dev += \"Tablet\";\n    } else if(isMobile) {\n      dev += \"Mobile\";      \n    } else {\n      dev += \"unknown\";\n    }\n\n    //return <p>{dev}</p>;\n    return dev;\n  }\n\n  //var aa = 1.5;\n  const handleScroll = (e) => { // scroll callback\n    // const sections = document.querySelectorAll('section');\n    // let value = window.pageYOffset / sections.offsetTop + 1;\n    // sections.style = {\n    //   transform:[]\n    // };\n    // //sections.style.transform  = 'scale(${value})';\n    // sections.style.transform = 'scale(${aa})';\n    // const scrollTop = e.srcElement.scrollingElement.scrollTop;\n    // console.log();\n    // // elems.forEach(elem => {\n    // //     if(isElementUnderBottom(elem, -20)) { // 현재 시야보다 아래에 있을 때\n    // //         elem.style.opacity = \"0\"; // 완전n 투명\n    // //         elem.style.transform = 'translateY(70px)'; // 70px 아래에 이동하도록 효과\n    // //     } else { // 현재와 동일선상 혹은 위에 위치할 때\n    // //         elem.style.opacity = 1;\n    // //         elem.style.transform = 'translateY(0px)'; // 제자리로 돌아오는 효과\n    // //     }\n    // // });\n    const changeBgSection = document.querySelector('.background-change-wrap');\n    const changeBgImg = document.querySelector('.background-change-wrap > div');\n    const { top: bgTop, height: bgHeight } = changeBgSection.getBoundingClientRect();\n    console.log(bgTop);\n    if (bgTop < 0) {\n      const rate = (-1) * bgTop / 4;\n      //changeBgImg.style.filter = `grayscale(${rate}%)`;\n      changeBgImg.style.opacity = `${(100 - rate / 5) / 100}`;\n      //      \n      const bgImg = document.querySelector('.background-change-wrap > div > img');\n      bgImg.src = 'https://yts.mx/assets/images/movies/The_Shawshank_Redemption_1994/medium-cover.jpg';\n    } else {\n      changeBgImg.style.filter = 'none';\n      changeBgImg.style.opacity = `1`;\n    }\n  }\n\n  window.addEventListener('scroll', handleScroll);\n\n  return (\n    <div>      \n      <div class='responsivestate'>\n        {getDeviceType()}\n        {/*{isPc && <p>Pc Mode</p>}\n        {isTablet && <p>Tablet Mode</p>}\n        {isMobile && <p>Mobile Mode</p>} */}\n        {/* <Mobile>\n          <div className=\"mobile_container\">\n            <p>MOBILE</p>\n          </div>\n        </Mobile> */}\n        {/* <Tablet>\n          <div className=\"tablet_container\">\n            <p>Tablet</p>\n          </div>\n        </Tablet>\n        <Pc>\n          <div className=\"Pc_container\">\n            <p>Tablet</p>\n          </div>\n        </Pc> */}\n      </div>\n      <div class='container'>\n        <div class='background-change-wrap'>\n          <div>\n            <img name='img-buffer-1' \n              // src='https://yts.mx/assets/images/movies/doctor_who_the_day_of_the_doctor_2013/medium-cover.jpg'\n              />\n          </div>\n        </div>\n          <Movies isMobile={isMobile}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}