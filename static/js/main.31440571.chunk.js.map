{"version":3,"sources":["logo.svg","Movies.js","App.js","reportWebVitals.js","index.js"],"names":["Movies","props","state","data","getMyData","a","axios","get","movies","console","log","JSON","stringify","setState","this","map","title","hash","src","medium_cover_image","loading","alt","rating","year","Component","App","React","isLoading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAe,I,oDCuEAA,E,kDAnEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAKVC,MAAQ,CACJC,KAAK,IAPU,EAYnBC,UAZmB,sBAYP,4BAAAC,EAAA,+EAMKC,IAAMC,IAAI,4DANf,OAORJ,GADAA,EANQ,QAOIA,KAAKA,KAAKK,OAPd,gDASJC,QAAQC,IAAR,MATI,yBAWJD,QAAQC,IAAI,WAAaC,KAAKC,UAAUT,IACxC,EAAKU,SAAS,CAACV,SAZX,4EAVRM,QAAQC,IAAI,eAFG,E,qDA8BnB,WACID,QAAQC,IAAI,wBACZI,KAAKV,c,gCAET,WACIK,QAAQC,IAAI,2B,kCAEhB,WACID,QAAQC,IAAI,6B,oBAGhB,WAEI,OADAD,QAAQC,IAAI,MAAQC,KAAKC,UAAUE,KAAKZ,MAAMC,OAE1C,8BAEQW,KAAKZ,MAAMC,KAAKY,KAAI,SAACP,GACjB,OACI,gCACI,uCAA4BA,EAAOQ,QAA3BR,EAAOS,MACf,qBAAKC,IAAKV,EAAOW,mBACbC,QAAQ,OAAOC,IAAKb,EAAOQ,MAAOA,MAAOR,EAAOQ,QACpD,gCACI,6BAAKR,EAAOQ,QACZ,6BAAKR,EAAOc,SACZ,6BAAKd,EAAOe,sB,GAxD3BC,aC+ENC,GA5EIC,IAAMF,U,kDA2CvB,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXyB,WAAW,EACXnB,OAAQ,IAJO,E,0CAiBnB,WAQE,OACE,8BACE,cAAC,EAAD,U,GA5BUkB,IAAMF,YCpCTI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.31440571.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{Component} from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Movies extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"device ctor\");\r\n\r\n    }\r\n\r\n    state = {\r\n        data:[],\r\n    };\r\n    \r\n    //getMyData = async() => {\r\n    //getMyData = async function() {\r\n    getMyData = async () => {\r\n        //const data = await axios.get('https://www.everdevel.com/ReactJS/axios/json/');\r\n        // const data = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n        // console.log('data is ' + JSON.stringify(data));\r\n        let data;\r\n        try {\r\n        data = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n        data = data.data.data.movies;\r\n        } catch (err) {\r\n            console.log(err);\r\n        } finally {\r\n            console.log('data is ' + JSON.stringify(data));\r\n            this.setState({data});\r\n        }\r\n\r\n        // async fcn은 암묵적으로 Promise를 반환\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log('in componentDidMount');\r\n        this.getMyData();\r\n    }\r\n    componentDidUpdate() {\r\n        console.log('in componentDidUpdate');\r\n    }\r\n    componentWillUnmount() {\r\n        console.log('in componentWillUnmount');\r\n    }\r\n\r\n    render() {\r\n        console.log('is ' + JSON.stringify(this.state.data));\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.data.map((movies) => {\r\n                        return (\r\n                            <div>\r\n                                <p key={movies.hash}>title:{movies.title}</p>\r\n                                <img src={movies.medium_cover_image} \r\n                                    loading=\"lazy\" alt={movies.title} title={movies.title}/>\r\n                                <div>\r\n                                    <h1>{movies.title}</h1>\r\n                                    <h4>{movies.rating}</h4>\r\n                                    <h4>{movies.year}</h4>\r\n                                </div>  \r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Movies;\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport axios from 'axios';\nimport Movies from './Movies';\n\nclass Food extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"hello\",\n    };\n  }\n\n  render() {\n    const name = this.props.name;\n    return (\n      <div>\n        <button title={name}>\n          {name}\n        </button>\n      </div>\n    );\n  }\n}\n\n// getMovies = async () => {\n//   const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");  \n// }\n\n// getMovies = async function() {\n//   const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");  \n//   return movies;\n// }\n\n\n// async getMoviesAsync() {\n//     const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n// }\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Food name={getMovies.data.data.movies}/>\n//     </div>\n//   );\n// }\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      movies: []\n    }\n    //this.getMovies();\n  }\n\n  // getMovies = async() => {\n  //   const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n  //   console.log(movies.data.data.movies);\n    \n  //   this.setState({movies: movies});\n  //   console.log(this.state.movies);\n  // }\n\n  render() {\n    //this.getMovies();\n    // return (\n    //   <div className=\"App\">\n    //     {/* <Food name=\"testfood\"/> */}\n    //     <Food name={this.movies}/>\n    //   </div>\n    // );\n    return (\n      <div>\n        <Movies />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}